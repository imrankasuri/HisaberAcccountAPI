#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HAccounts.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="haccountsdb")]
	public partial class PPSLinqToSqlDataContext : _DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAccessKey(tblAccessKey instance);
    partial void UpdatetblAccessKey(tblAccessKey instance);
    partial void DeletetblAccessKey(tblAccessKey instance);
    partial void InserttblAccountType(tblAccountType instance);
    partial void UpdatetblAccountType(tblAccountType instance);
    partial void DeletetblAccountType(tblAccountType instance);
    partial void InserttblEmailLog(tblEmailLog instance);
    partial void UpdatetblEmailLog(tblEmailLog instance);
    partial void DeletetblEmailLog(tblEmailLog instance);
    partial void InserttblInvestmentSummary(tblInvestmentSummary instance);
    partial void UpdatetblInvestmentSummary(tblInvestmentSummary instance);
    partial void DeletetblInvestmentSummary(tblInvestmentSummary instance);
    partial void InserttblSetting(tblSetting instance);
    partial void UpdatetblSetting(tblSetting instance);
    partial void DeletetblSetting(tblSetting instance);
    partial void InserttblSMSSent(tblSMSSent instance);
    partial void UpdatetblSMSSent(tblSMSSent instance);
    partial void DeletetblSMSSent(tblSMSSent instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    partial void InserttblMeasureUnit(tblMeasureUnit instance);
    partial void UpdatetblMeasureUnit(tblMeasureUnit instance);
    partial void DeletetblMeasureUnit(tblMeasureUnit instance);
    partial void InserttblProductPump(tblProductPump instance);
    partial void UpdatetblProductPump(tblProductPump instance);
    partial void DeletetblProductPump(tblProductPump instance);
    partial void InserttblDefaultProduct(tblDefaultProduct instance);
    partial void UpdatetblDefaultProduct(tblDefaultProduct instance);
    partial void DeletetblDefaultProduct(tblDefaultProduct instance);
    partial void InserttblFuleProvider(tblFuleProvider instance);
    partial void UpdatetblFuleProvider(tblFuleProvider instance);
    partial void DeletetblFuleProvider(tblFuleProvider instance);
    partial void InserttblProductLedger(tblProductLedger instance);
    partial void UpdatetblProductLedger(tblProductLedger instance);
    partial void DeletetblProductLedger(tblProductLedger instance);
    partial void InserttblSaleInvoiceHead(tblSaleInvoiceHead instance);
    partial void UpdatetblSaleInvoiceHead(tblSaleInvoiceHead instance);
    partial void DeletetblSaleInvoiceHead(tblSaleInvoiceHead instance);
    partial void InserttblGeneralVoucher(tblGeneralVoucher instance);
    partial void UpdatetblGeneralVoucher(tblGeneralVoucher instance);
    partial void DeletetblGeneralVoucher(tblGeneralVoucher instance);
    partial void InserttblDIPAdjustment(tblDIPAdjustment instance);
    partial void UpdatetblDIPAdjustment(tblDIPAdjustment instance);
    partial void DeletetblDIPAdjustment(tblDIPAdjustment instance);
    partial void InserttblAccount(tblAccount instance);
    partial void UpdatetblAccount(tblAccount instance);
    partial void DeletetblAccount(tblAccount instance);
    partial void InserttblLoginLog(tblLoginLog instance);
    partial void UpdatetblLoginLog(tblLoginLog instance);
    partial void DeletetblLoginLog(tblLoginLog instance);
    partial void InserttblPumpReading(tblPumpReading instance);
    partial void UpdatetblPumpReading(tblPumpReading instance);
    partial void DeletetblPumpReading(tblPumpReading instance);
    partial void InserttblSaleInvoiceDetail(tblSaleInvoiceDetail instance);
    partial void UpdatetblSaleInvoiceDetail(tblSaleInvoiceDetail instance);
    partial void DeletetblSaleInvoiceDetail(tblSaleInvoiceDetail instance);
    partial void InserttblGeneralLedger(tblGeneralLedger instance);
    partial void UpdatetblGeneralLedger(tblGeneralLedger instance);
    partial void DeletetblGeneralLedger(tblGeneralLedger instance);
    partial void InserttblCustomerRate(tblCustomerRate instance);
    partial void UpdatetblCustomerRate(tblCustomerRate instance);
    partial void DeletetblCustomerRate(tblCustomerRate instance);
    partial void InserttblAccountMap(tblAccountMap instance);
    partial void UpdatetblAccountMap(tblAccountMap instance);
    partial void DeletetblAccountMap(tblAccountMap instance);
    partial void InserttblException(tblException instance);
    partial void UpdatetblException(tblException instance);
    partial void DeletetblException(tblException instance);
    partial void InserttblTankDefination(tblTankDefination instance);
    partial void UpdatetblTankDefination(tblTankDefination instance);
    partial void DeletetblTankDefination(tblTankDefination instance);
    partial void InserttblCompanyInfo(tblCompanyInfo instance);
    partial void UpdatetblCompanyInfo(tblCompanyInfo instance);
    partial void DeletetblCompanyInfo(tblCompanyInfo instance);
    partial void InserttblProductMap(tblProductMap instance);
    partial void UpdatetblProductMap(tblProductMap instance);
    partial void DeletetblProductMap(tblProductMap instance);
    partial void InserttblDipReading(tblDipReading instance);
    partial void UpdatetblDipReading(tblDipReading instance);
    partial void DeletetblDipReading(tblDipReading instance);
    partial void InserttblPurchaseInvoiceDetail(tblPurchaseInvoiceDetail instance);
    partial void UpdatetblPurchaseInvoiceDetail(tblPurchaseInvoiceDetail instance);
    partial void DeletetblPurchaseInvoiceDetail(tblPurchaseInvoiceDetail instance);
    partial void InserttblPurchaseInvoiceHead(tblPurchaseInvoiceHead instance);
    partial void UpdatetblPurchaseInvoiceHead(tblPurchaseInvoiceHead instance);
    partial void DeletetblPurchaseInvoiceHead(tblPurchaseInvoiceHead instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    #endregion
		
		public PPSLinqToSqlDataContext() : 
				base(global::HAccounts.DAL.Properties.Settings.Default.haccountsdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PPSLinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PPSLinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PPSLinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PPSLinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAccessKey> tblAccessKeys
		{
			get
			{
				return this.GetTable<tblAccessKey>();
			}
		}
		
		public System.Data.Linq.Table<tblAccountType> tblAccountTypes
		{
			get
			{
				return this.GetTable<tblAccountType>();
			}
		}
		
		public System.Data.Linq.Table<tblEmailLog> tblEmailLogs
		{
			get
			{
				return this.GetTable<tblEmailLog>();
			}
		}
		
		public System.Data.Linq.Table<tblInvestmentSummary> tblInvestmentSummaries
		{
			get
			{
				return this.GetTable<tblInvestmentSummary>();
			}
		}
		
		public System.Data.Linq.Table<tblSetting> tblSettings
		{
			get
			{
				return this.GetTable<tblSetting>();
			}
		}
		
		public System.Data.Linq.Table<tblSMSSent> tblSMSSents
		{
			get
			{
				return this.GetTable<tblSMSSent>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblMeasureUnit> tblMeasureUnits
		{
			get
			{
				return this.GetTable<tblMeasureUnit>();
			}
		}
		
		public System.Data.Linq.Table<tblProductPump> tblProductPumps
		{
			get
			{
				return this.GetTable<tblProductPump>();
			}
		}
		
		public System.Data.Linq.Table<tblDefaultProduct> tblDefaultProducts
		{
			get
			{
				return this.GetTable<tblDefaultProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblFuleProvider> tblFuleProviders
		{
			get
			{
				return this.GetTable<tblFuleProvider>();
			}
		}
		
		public System.Data.Linq.Table<tblProductLedger> tblProductLedgers
		{
			get
			{
				return this.GetTable<tblProductLedger>();
			}
		}
		
		public System.Data.Linq.Table<tblSaleInvoiceHead> tblSaleInvoiceHeads
		{
			get
			{
				return this.GetTable<tblSaleInvoiceHead>();
			}
		}
		
		public System.Data.Linq.Table<tblGeneralVoucher> tblGeneralVouchers
		{
			get
			{
				return this.GetTable<tblGeneralVoucher>();
			}
		}
		
		public System.Data.Linq.Table<tblDIPAdjustment> tblDIPAdjustments
		{
			get
			{
				return this.GetTable<tblDIPAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<tblAccount> tblAccounts
		{
			get
			{
				return this.GetTable<tblAccount>();
			}
		}
		
		public System.Data.Linq.Table<tblLoginLog> tblLoginLogs
		{
			get
			{
				return this.GetTable<tblLoginLog>();
			}
		}
		
		public System.Data.Linq.Table<tblPumpReading> tblPumpReadings
		{
			get
			{
				return this.GetTable<tblPumpReading>();
			}
		}
		
		public System.Data.Linq.Table<tblSaleInvoiceDetail> tblSaleInvoiceDetails
		{
			get
			{
				return this.GetTable<tblSaleInvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblGeneralLedger> tblGeneralLedgers
		{
			get
			{
				return this.GetTable<tblGeneralLedger>();
			}
		}
		
		public System.Data.Linq.Table<tblCustomerRate> tblCustomerRates
		{
			get
			{
				return this.GetTable<tblCustomerRate>();
			}
		}
		
		public System.Data.Linq.Table<tblAccountMap> tblAccountMaps
		{
			get
			{
				return this.GetTable<tblAccountMap>();
			}
		}
		
		public System.Data.Linq.Table<tblException> tblExceptions
		{
			get
			{
				return this.GetTable<tblException>();
			}
		}
		
		public System.Data.Linq.Table<tblTankDefination> tblTankDefinations
		{
			get
			{
				return this.GetTable<tblTankDefination>();
			}
		}
		
		public System.Data.Linq.Table<tblCompanyInfo> tblCompanyInfos
		{
			get
			{
				return this.GetTable<tblCompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<tblProductMap> tblProductMaps
		{
			get
			{
				return this.GetTable<tblProductMap>();
			}
		}
		
		public System.Data.Linq.Table<tblDipReading> tblDipReadings
		{
			get
			{
				return this.GetTable<tblDipReading>();
			}
		}
		
		public System.Data.Linq.Table<tblPurchaseInvoiceDetail> tblPurchaseInvoiceDetails
		{
			get
			{
				return this.GetTable<tblPurchaseInvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblPurchaseInvoiceHead> tblPurchaseInvoiceHeads
		{
			get
			{
				return this.GetTable<tblPurchaseInvoiceHead>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCurrentProductBalance")]
		public ISingleResult<GetCurrentProductBalanceResult> GetCurrentProductBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Product_ID", DbType="Int")] System.Nullable<int> product_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), product_ID);
			return ((ISingleResult<GetCurrentProductBalanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCurrentProductBalanceOnDate")]
		public ISingleResult<GetCurrentProductBalanceOnDateResult> GetCurrentProductBalanceOnDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Product_ID", DbType="Int")] System.Nullable<int> product_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClosingDate", DbType="Date")] System.Nullable<System.DateTime> closingDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), product_ID, closingDate);
			return ((ISingleResult<GetCurrentProductBalanceOnDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.closeDatabase")]
		public int closeDatabase()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccessKey")]
	public partial class tblAccessKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private string _AccessKey;
		
		private System.DateTime _ExpiryDate;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAccessKeyChanging(string value);
    partial void OnAccessKeyChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblAccessKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessKey", DbType="NVarChar(3000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AccessKey
		{
			get
			{
				return this._AccessKey;
			}
			set
			{
				if ((this._AccessKey != value))
				{
					this.OnAccessKeyChanging(value);
					this.SendPropertyChanging();
					this._AccessKey = value;
					this.SendPropertyChanged("AccessKey");
					this.OnAccessKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccountType")]
	public partial class tblAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _Is_Deleted;
		
		private bool _Is_Active;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<tblAccount> _tblAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblAccountType()
		{
			this._tblAccounts = new EntitySet<tblAccount>(new Action<tblAccount>(this.attach_tblAccounts), new Action<tblAccount>(this.detach_tblAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccountType_tblAccount", Storage="_tblAccounts", ThisKey="ID", OtherKey="Account_Type_ID")]
		public EntitySet<tblAccount> tblAccounts
		{
			get
			{
				return this._tblAccounts;
			}
			set
			{
				this._tblAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAccounts(tblAccount entity)
		{
			this.SendPropertyChanging();
			entity.tblAccountType = this;
		}
		
		private void detach_tblAccounts(tblAccount entity)
		{
			this.SendPropertyChanging();
			entity.tblAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmailLog")]
	public partial class tblEmailLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Email_To;
		
		private string _Email_From;
		
		private string _Subject;
		
		private string _Reference;
		
		private string _Event_Type;
		
		private string _Delivery_Status;
		
		private System.DateTime _Dated;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnEmail_ToChanging(string value);
    partial void OnEmail_ToChanged();
    partial void OnEmail_FromChanging(string value);
    partial void OnEmail_FromChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnEvent_TypeChanging(string value);
    partial void OnEvent_TypeChanged();
    partial void OnDelivery_StatusChanging(string value);
    partial void OnDelivery_StatusChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblEmailLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_To", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email_To
		{
			get
			{
				return this._Email_To;
			}
			set
			{
				if ((this._Email_To != value))
				{
					this.OnEmail_ToChanging(value);
					this.SendPropertyChanging();
					this._Email_To = value;
					this.SendPropertyChanged("Email_To");
					this.OnEmail_ToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_From", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Email_From
		{
			get
			{
				return this._Email_From;
			}
			set
			{
				if ((this._Email_From != value))
				{
					this.OnEmail_FromChanging(value);
					this.SendPropertyChanging();
					this._Email_From = value;
					this.SendPropertyChanged("Email_From");
					this.OnEmail_FromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_Type", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Event_Type
		{
			get
			{
				return this._Event_Type;
			}
			set
			{
				if ((this._Event_Type != value))
				{
					this.OnEvent_TypeChanging(value);
					this.SendPropertyChanging();
					this._Event_Type = value;
					this.SendPropertyChanged("Event_Type");
					this.OnEvent_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery_Status", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Delivery_Status
		{
			get
			{
				return this._Delivery_Status;
			}
			set
			{
				if ((this._Delivery_Status != value))
				{
					this.OnDelivery_StatusChanging(value);
					this.SendPropertyChanging();
					this._Delivery_Status = value;
					this.SendPropertyChanged("Delivery_Status");
					this.OnDelivery_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInvestmentSummary")]
	public partial class tblInvestmentSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private System.DateTime _Dated;
		
		private decimal _Stock_Value;
		
		private decimal _Credits;
		
		private decimal _Cash;
		
		private decimal _Income;
		
		private decimal _ExtraIncome;
		
		private decimal _Adjustments;
		
		private decimal _Gross_Investment;
		
		private decimal _Amount_Payable;
		
		private decimal _Net_Investment;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private decimal _Expenses;
		
		private decimal _Net_Income;
		
		private decimal _Investment_Difference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnStock_ValueChanging(decimal value);
    partial void OnStock_ValueChanged();
    partial void OnCreditsChanging(decimal value);
    partial void OnCreditsChanged();
    partial void OnCashChanging(decimal value);
    partial void OnCashChanged();
    partial void OnIncomeChanging(decimal value);
    partial void OnIncomeChanged();
    partial void OnExtraIncomeChanging(decimal value);
    partial void OnExtraIncomeChanged();
    partial void OnAdjustmentsChanging(decimal value);
    partial void OnAdjustmentsChanged();
    partial void OnGross_InvestmentChanging(decimal value);
    partial void OnGross_InvestmentChanged();
    partial void OnAmount_PayableChanging(decimal value);
    partial void OnAmount_PayableChanged();
    partial void OnNet_InvestmentChanging(decimal value);
    partial void OnNet_InvestmentChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnExpensesChanging(decimal value);
    partial void OnExpensesChanged();
    partial void OnNet_IncomeChanging(decimal value);
    partial void OnNet_IncomeChanged();
    partial void OnInvestment_DifferenceChanging(decimal value);
    partial void OnInvestment_DifferenceChanged();
    #endregion
		
		public tblInvestmentSummary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_Value", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Stock_Value
		{
			get
			{
				return this._Stock_Value;
			}
			set
			{
				if ((this._Stock_Value != value))
				{
					this.OnStock_ValueChanging(value);
					this.SendPropertyChanging();
					this._Stock_Value = value;
					this.SendPropertyChanged("Stock_Value");
					this.OnStock_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraIncome", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ExtraIncome
		{
			get
			{
				return this._ExtraIncome;
			}
			set
			{
				if ((this._ExtraIncome != value))
				{
					this.OnExtraIncomeChanging(value);
					this.SendPropertyChanging();
					this._ExtraIncome = value;
					this.SendPropertyChanged("ExtraIncome");
					this.OnExtraIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adjustments", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Adjustments
		{
			get
			{
				return this._Adjustments;
			}
			set
			{
				if ((this._Adjustments != value))
				{
					this.OnAdjustmentsChanging(value);
					this.SendPropertyChanging();
					this._Adjustments = value;
					this.SendPropertyChanged("Adjustments");
					this.OnAdjustmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gross_Investment", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Gross_Investment
		{
			get
			{
				return this._Gross_Investment;
			}
			set
			{
				if ((this._Gross_Investment != value))
				{
					this.OnGross_InvestmentChanging(value);
					this.SendPropertyChanging();
					this._Gross_Investment = value;
					this.SendPropertyChanged("Gross_Investment");
					this.OnGross_InvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Payable", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount_Payable
		{
			get
			{
				return this._Amount_Payable;
			}
			set
			{
				if ((this._Amount_Payable != value))
				{
					this.OnAmount_PayableChanging(value);
					this.SendPropertyChanging();
					this._Amount_Payable = value;
					this.SendPropertyChanged("Amount_Payable");
					this.OnAmount_PayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net_Investment", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Net_Investment
		{
			get
			{
				return this._Net_Investment;
			}
			set
			{
				if ((this._Net_Investment != value))
				{
					this.OnNet_InvestmentChanging(value);
					this.SendPropertyChanging();
					this._Net_Investment = value;
					this.SendPropertyChanged("Net_Investment");
					this.OnNet_InvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Expenses
		{
			get
			{
				return this._Expenses;
			}
			set
			{
				if ((this._Expenses != value))
				{
					this.OnExpensesChanging(value);
					this.SendPropertyChanging();
					this._Expenses = value;
					this.SendPropertyChanged("Expenses");
					this.OnExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net_Income", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Net_Income
		{
			get
			{
				return this._Net_Income;
			}
			set
			{
				if ((this._Net_Income != value))
				{
					this.OnNet_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Net_Income = value;
					this.SendPropertyChanged("Net_Income");
					this.OnNet_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investment_Difference", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Investment_Difference
		{
			get
			{
				return this._Investment_Difference;
			}
			set
			{
				if ((this._Investment_Difference != value))
				{
					this.OnInvestment_DifferenceChanging(value);
					this.SendPropertyChanging();
					this._Investment_Difference = value;
					this.SendPropertyChanged("Investment_Difference");
					this.OnInvestment_DifferenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSetting")]
	public partial class tblSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private string _Name;
		
		private string _Value;
		
		private string _Updated_By;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnUpdated_ByChanging(string value);
    partial void OnUpdated_ByChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_By", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Updated_By
		{
			get
			{
				return this._Updated_By;
			}
			set
			{
				if ((this._Updated_By != value))
				{
					this.OnUpdated_ByChanging(value);
					this.SendPropertyChanging();
					this._Updated_By = value;
					this.SendPropertyChanged("Updated_By");
					this.OnUpdated_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSMSSent")]
	public partial class tblSMSSent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _SMS_Mask;
		
		private string _SMS_Text;
		
		private string _SMS_TO;
		
		private string _Sender_Department;
		
		private string _Sender_Name;
		
		private System.Nullable<int> _Sender_ID;
		
		private bool _Is_Approved;
		
		private bool _Is_Delivered;
		
		private string _Error_Code;
		
		private string _Reference_No;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private string _Response_Details;
		
		private string _Service_Provider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSMS_MaskChanging(string value);
    partial void OnSMS_MaskChanged();
    partial void OnSMS_TextChanging(string value);
    partial void OnSMS_TextChanged();
    partial void OnSMS_TOChanging(string value);
    partial void OnSMS_TOChanged();
    partial void OnSender_DepartmentChanging(string value);
    partial void OnSender_DepartmentChanged();
    partial void OnSender_NameChanging(string value);
    partial void OnSender_NameChanged();
    partial void OnSender_IDChanging(System.Nullable<int> value);
    partial void OnSender_IDChanged();
    partial void OnIs_ApprovedChanging(bool value);
    partial void OnIs_ApprovedChanged();
    partial void OnIs_DeliveredChanging(bool value);
    partial void OnIs_DeliveredChanged();
    partial void OnError_CodeChanging(string value);
    partial void OnError_CodeChanged();
    partial void OnReference_NoChanging(string value);
    partial void OnReference_NoChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnResponse_DetailsChanging(string value);
    partial void OnResponse_DetailsChanged();
    partial void OnService_ProviderChanging(string value);
    partial void OnService_ProviderChanged();
    #endregion
		
		public tblSMSSent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_Mask", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SMS_Mask
		{
			get
			{
				return this._SMS_Mask;
			}
			set
			{
				if ((this._SMS_Mask != value))
				{
					this.OnSMS_MaskChanging(value);
					this.SendPropertyChanging();
					this._SMS_Mask = value;
					this.SendPropertyChanged("SMS_Mask");
					this.OnSMS_MaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_Text", DbType="NVarChar(600)", UpdateCheck=UpdateCheck.Never)]
		public string SMS_Text
		{
			get
			{
				return this._SMS_Text;
			}
			set
			{
				if ((this._SMS_Text != value))
				{
					this.OnSMS_TextChanging(value);
					this.SendPropertyChanging();
					this._SMS_Text = value;
					this.SendPropertyChanged("SMS_Text");
					this.OnSMS_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_TO", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SMS_TO
		{
			get
			{
				return this._SMS_TO;
			}
			set
			{
				if ((this._SMS_TO != value))
				{
					this.OnSMS_TOChanging(value);
					this.SendPropertyChanging();
					this._SMS_TO = value;
					this.SendPropertyChanged("SMS_TO");
					this.OnSMS_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender_Department", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Sender_Department
		{
			get
			{
				return this._Sender_Department;
			}
			set
			{
				if ((this._Sender_Department != value))
				{
					this.OnSender_DepartmentChanging(value);
					this.SendPropertyChanging();
					this._Sender_Department = value;
					this.SendPropertyChanged("Sender_Department");
					this.OnSender_DepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Sender_Name
		{
			get
			{
				return this._Sender_Name;
			}
			set
			{
				if ((this._Sender_Name != value))
				{
					this.OnSender_NameChanging(value);
					this.SendPropertyChanging();
					this._Sender_Name = value;
					this.SendPropertyChanged("Sender_Name");
					this.OnSender_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Sender_ID
		{
			get
			{
				return this._Sender_ID;
			}
			set
			{
				if ((this._Sender_ID != value))
				{
					this.OnSender_IDChanging(value);
					this.SendPropertyChanging();
					this._Sender_ID = value;
					this.SendPropertyChanged("Sender_ID");
					this.OnSender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Approved", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Approved
		{
			get
			{
				return this._Is_Approved;
			}
			set
			{
				if ((this._Is_Approved != value))
				{
					this.OnIs_ApprovedChanging(value);
					this.SendPropertyChanging();
					this._Is_Approved = value;
					this.SendPropertyChanged("Is_Approved");
					this.OnIs_ApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Delivered", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Delivered
		{
			get
			{
				return this._Is_Delivered;
			}
			set
			{
				if ((this._Is_Delivered != value))
				{
					this.OnIs_DeliveredChanging(value);
					this.SendPropertyChanging();
					this._Is_Delivered = value;
					this.SendPropertyChanged("Is_Delivered");
					this.OnIs_DeliveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error_Code", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Error_Code
		{
			get
			{
				return this._Error_Code;
			}
			set
			{
				if ((this._Error_Code != value))
				{
					this.OnError_CodeChanging(value);
					this.SendPropertyChanging();
					this._Error_Code = value;
					this.SendPropertyChanged("Error_Code");
					this.OnError_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_No", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Reference_No
		{
			get
			{
				return this._Reference_No;
			}
			set
			{
				if ((this._Reference_No != value))
				{
					this.OnReference_NoChanging(value);
					this.SendPropertyChanging();
					this._Reference_No = value;
					this.SendPropertyChanged("Reference_No");
					this.OnReference_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response_Details", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Response_Details
		{
			get
			{
				return this._Response_Details;
			}
			set
			{
				if ((this._Response_Details != value))
				{
					this.OnResponse_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Response_Details = value;
					this.SendPropertyChanged("Response_Details");
					this.OnResponse_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Provider", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Service_Provider
		{
			get
			{
				return this._Service_Provider;
			}
			set
			{
				if ((this._Service_Provider != value))
				{
					this.OnService_ProviderChanging(value);
					this.SendPropertyChanging();
					this._Service_Provider = value;
					this.SendPropertyChanged("Service_Provider");
					this.OnService_ProviderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductCode;
		
		private int _PumpID;
		
		private string _Name;
		
		private int _MeasureUnitID;
		
		private string _Description;
		
		private decimal _Sale_Price;
		
		private decimal _Last_Purchase_Price;
		
		private bool _Is_Default;
		
		private bool _Is_Deleted;
		
		private bool _Is_Active;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<tblProductPump> _tblProductPumps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMeasureUnitIDChanging(int value);
    partial void OnMeasureUnitIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSale_PriceChanging(decimal value);
    partial void OnSale_PriceChanged();
    partial void OnLast_Purchase_PriceChanging(decimal value);
    partial void OnLast_Purchase_PriceChanged();
    partial void OnIs_DefaultChanging(bool value);
    partial void OnIs_DefaultChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblProductPumps = new EntitySet<tblProductPump>(new Action<tblProductPump>(this.attach_tblProductPumps), new Action<tblProductPump>(this.detach_tblProductPumps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureUnitID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MeasureUnitID
		{
			get
			{
				return this._MeasureUnitID;
			}
			set
			{
				if ((this._MeasureUnitID != value))
				{
					this.OnMeasureUnitIDChanging(value);
					this.SendPropertyChanging();
					this._MeasureUnitID = value;
					this.SendPropertyChanged("MeasureUnitID");
					this.OnMeasureUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Purchase_Price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Last_Purchase_Price
		{
			get
			{
				return this._Last_Purchase_Price;
			}
			set
			{
				if ((this._Last_Purchase_Price != value))
				{
					this.OnLast_Purchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Last_Purchase_Price = value;
					this.SendPropertyChanged("Last_Purchase_Price");
					this.OnLast_Purchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Default", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Default
		{
			get
			{
				return this._Is_Default;
			}
			set
			{
				if ((this._Is_Default != value))
				{
					this.OnIs_DefaultChanging(value);
					this.SendPropertyChanging();
					this._Is_Default = value;
					this.SendPropertyChanged("Is_Default");
					this.OnIs_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblProductPump", Storage="_tblProductPumps", ThisKey="ID", OtherKey="Product_ID")]
		public EntitySet<tblProductPump> tblProductPumps
		{
			get
			{
				return this._tblProductPumps;
			}
			set
			{
				this._tblProductPumps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProductPumps(tblProductPump entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblProductPumps(tblProductPump entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMeasureUnit")]
	public partial class tblMeasureUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _Is_Deleted;
		
		private bool _Is_Active;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblMeasureUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductPumps")]
	public partial class tblProductPump : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _Pump_No;
		
		private int _Product_ID;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPump_NoChanging(int value);
    partial void OnPump_NoChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblProductPump()
		{
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_No", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Pump_No
		{
			get
			{
				return this._Pump_No;
			}
			set
			{
				if ((this._Pump_No != value))
				{
					this.OnPump_NoChanging(value);
					this.SendPropertyChanging();
					this._Pump_No = value;
					this.SendPropertyChanged("Pump_No");
					this.OnPump_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblProductPump", Storage="_tblProduct", ThisKey="Product_ID", OtherKey="ID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblProductPumps.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblProductPumps.Add(this);
						this._Product_ID = value.ID;
					}
					else
					{
						this._Product_ID = default(int);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDefaultProduct")]
	public partial class tblDefaultProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductCode;
		
		private string _Name;
		
		private int _MeasureUnitID;
		
		private string _Description;
		
		private decimal _Sale_Price;
		
		private decimal _Last_Purchase_Price;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMeasureUnitIDChanging(int value);
    partial void OnMeasureUnitIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSale_PriceChanging(decimal value);
    partial void OnSale_PriceChanged();
    partial void OnLast_Purchase_PriceChanging(decimal value);
    partial void OnLast_Purchase_PriceChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblDefaultProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureUnitID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MeasureUnitID
		{
			get
			{
				return this._MeasureUnitID;
			}
			set
			{
				if ((this._MeasureUnitID != value))
				{
					this.OnMeasureUnitIDChanging(value);
					this.SendPropertyChanging();
					this._MeasureUnitID = value;
					this.SendPropertyChanged("MeasureUnitID");
					this.OnMeasureUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Purchase_Price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Last_Purchase_Price
		{
			get
			{
				return this._Last_Purchase_Price;
			}
			set
			{
				if ((this._Last_Purchase_Price != value))
				{
					this.OnLast_Purchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Last_Purchase_Price = value;
					this.SendPropertyChanged("Last_Purchase_Price");
					this.OnLast_Purchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFuleProvider")]
	public partial class tblFuleProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Logo_Login;
		
		private string _Logo_Title;
		
		private string _Logo_Reports;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLogo_LoginChanging(string value);
    partial void OnLogo_LoginChanged();
    partial void OnLogo_TitleChanging(string value);
    partial void OnLogo_TitleChanged();
    partial void OnLogo_ReportsChanging(string value);
    partial void OnLogo_ReportsChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblFuleProvider()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Login", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Logo_Login
		{
			get
			{
				return this._Logo_Login;
			}
			set
			{
				if ((this._Logo_Login != value))
				{
					this.OnLogo_LoginChanging(value);
					this.SendPropertyChanging();
					this._Logo_Login = value;
					this.SendPropertyChanged("Logo_Login");
					this.OnLogo_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Logo_Title
		{
			get
			{
				return this._Logo_Title;
			}
			set
			{
				if ((this._Logo_Title != value))
				{
					this.OnLogo_TitleChanging(value);
					this.SendPropertyChanging();
					this._Logo_Title = value;
					this.SendPropertyChanged("Logo_Title");
					this.OnLogo_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Reports", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Logo_Reports
		{
			get
			{
				return this._Logo_Reports;
			}
			set
			{
				if ((this._Logo_Reports != value))
				{
					this.OnLogo_ReportsChanging(value);
					this.SendPropertyChanging();
					this._Logo_Reports = value;
					this.SendPropertyChanged("Logo_Reports");
					this.OnLogo_ReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductLedger")]
	public partial class tblProductLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _Product_ID;
		
		private System.DateTime _Transaction_Date;
		
		private int _Reference_ID;
		
		private string _Reference_Type;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private decimal _Balance;
		
		private string _BalanceType;
		
		private string _Description;
		
		private string _Vehicle_No;
		
		private string _Receipt_No;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnTransaction_DateChanging(System.DateTime value);
    partial void OnTransaction_DateChanged();
    partial void OnReference_IDChanging(int value);
    partial void OnReference_IDChanged();
    partial void OnReference_TypeChanging(string value);
    partial void OnReference_TypeChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnBalanceTypeChanging(string value);
    partial void OnBalanceTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVehicle_NoChanging(string value);
    partial void OnVehicle_NoChanged();
    partial void OnReceipt_NoChanging(string value);
    partial void OnReceipt_NoChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblProductLedger()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Transaction_Date
		{
			get
			{
				return this._Transaction_Date;
			}
			set
			{
				if ((this._Transaction_Date != value))
				{
					this.OnTransaction_DateChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Date = value;
					this.SendPropertyChanged("Transaction_Date");
					this.OnTransaction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Reference_ID
		{
			get
			{
				return this._Reference_ID;
			}
			set
			{
				if ((this._Reference_ID != value))
				{
					this.OnReference_IDChanging(value);
					this.SendPropertyChanging();
					this._Reference_ID = value;
					this.SendPropertyChanged("Reference_ID");
					this.OnReference_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_Type", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reference_Type
		{
			get
			{
				return this._Reference_Type;
			}
			set
			{
				if ((this._Reference_Type != value))
				{
					this.OnReference_TypeChanging(value);
					this.SendPropertyChanging();
					this._Reference_Type = value;
					this.SendPropertyChanged("Reference_Type");
					this.OnReference_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceType", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BalanceType
		{
			get
			{
				return this._BalanceType;
			}
			set
			{
				if ((this._BalanceType != value))
				{
					this.OnBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._BalanceType = value;
					this.SendPropertyChanged("BalanceType");
					this.OnBalanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_No", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Vehicle_No
		{
			get
			{
				return this._Vehicle_No;
			}
			set
			{
				if ((this._Vehicle_No != value))
				{
					this.OnVehicle_NoChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_No = value;
					this.SendPropertyChanged("Vehicle_No");
					this.OnVehicle_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receipt_No", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Receipt_No
		{
			get
			{
				return this._Receipt_No;
			}
			set
			{
				if ((this._Receipt_No != value))
				{
					this.OnReceipt_NoChanging(value);
					this.SendPropertyChanging();
					this._Receipt_No = value;
					this.SendPropertyChanged("Receipt_No");
					this.OnReceipt_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSaleInvoiceHead")]
	public partial class tblSaleInvoiceHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceNo;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private System.DateTime _Dated;
		
		private decimal _Cash_Total;
		
		private decimal _Credit_Total;
		
		private string _Description;
		
		private string _AddedBy;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<tblSaleInvoiceDetail> _tblSaleInvoiceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCash_TotalChanging(decimal value);
    partial void OnCash_TotalChanged();
    partial void OnCredit_TotalChanging(decimal value);
    partial void OnCredit_TotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblSaleInvoiceHead()
		{
			this._tblSaleInvoiceDetails = new EntitySet<tblSaleInvoiceDetail>(new Action<tblSaleInvoiceDetail>(this.attach_tblSaleInvoiceDetails), new Action<tblSaleInvoiceDetail>(this.detach_tblSaleInvoiceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Total", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Cash_Total
		{
			get
			{
				return this._Cash_Total;
			}
			set
			{
				if ((this._Cash_Total != value))
				{
					this.OnCash_TotalChanging(value);
					this.SendPropertyChanging();
					this._Cash_Total = value;
					this.SendPropertyChanged("Cash_Total");
					this.OnCash_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit_Total", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Credit_Total
		{
			get
			{
				return this._Credit_Total;
			}
			set
			{
				if ((this._Credit_Total != value))
				{
					this.OnCredit_TotalChanging(value);
					this.SendPropertyChanging();
					this._Credit_Total = value;
					this.SendPropertyChanged("Credit_Total");
					this.OnCredit_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSaleInvoiceHead_tblSaleInvoiceDetail", Storage="_tblSaleInvoiceDetails", ThisKey="ID", OtherKey="Invoice_ID")]
		public EntitySet<tblSaleInvoiceDetail> tblSaleInvoiceDetails
		{
			get
			{
				return this._tblSaleInvoiceDetails;
			}
			set
			{
				this._tblSaleInvoiceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblSaleInvoiceDetails(tblSaleInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblSaleInvoiceHead = this;
		}
		
		private void detach_tblSaleInvoiceDetails(tblSaleInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblSaleInvoiceHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGeneralVoucher")]
	public partial class tblGeneralVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _VoucherNo;
		
		private int _PumpID;
		
		private System.DateTime _Dated;
		
		private string _Description;
		
		private int _Debit_Account_ID;
		
		private int _Credit_Account_ID;
		
		private decimal _Amount;
		
		private int _AddedByUserID;
		
		private string _AddedByUser;
		
		private string _UpdatedByUser;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVoucherNoChanging(int value);
    partial void OnVoucherNoChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDebit_Account_IDChanging(int value);
    partial void OnDebit_Account_IDChanged();
    partial void OnCredit_Account_IDChanging(int value);
    partial void OnCredit_Account_IDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAddedByUserIDChanging(int value);
    partial void OnAddedByUserIDChanged();
    partial void OnAddedByUserChanging(string value);
    partial void OnAddedByUserChanged();
    partial void OnUpdatedByUserChanging(string value);
    partial void OnUpdatedByUserChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblGeneralVoucher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit_Account_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Debit_Account_ID
		{
			get
			{
				return this._Debit_Account_ID;
			}
			set
			{
				if ((this._Debit_Account_ID != value))
				{
					this.OnDebit_Account_IDChanging(value);
					this.SendPropertyChanging();
					this._Debit_Account_ID = value;
					this.SendPropertyChanged("Debit_Account_ID");
					this.OnDebit_Account_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit_Account_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Credit_Account_ID
		{
			get
			{
				return this._Credit_Account_ID;
			}
			set
			{
				if ((this._Credit_Account_ID != value))
				{
					this.OnCredit_Account_IDChanging(value);
					this.SendPropertyChanging();
					this._Credit_Account_ID = value;
					this.SendPropertyChanged("Credit_Account_ID");
					this.OnCredit_Account_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUserID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AddedByUserID
		{
			get
			{
				return this._AddedByUserID;
			}
			set
			{
				if ((this._AddedByUserID != value))
				{
					this.OnAddedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._AddedByUserID = value;
					this.SendPropertyChanged("AddedByUserID");
					this.OnAddedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUser", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string AddedByUser
		{
			get
			{
				return this._AddedByUser;
			}
			set
			{
				if ((this._AddedByUser != value))
				{
					this.OnAddedByUserChanging(value);
					this.SendPropertyChanging();
					this._AddedByUser = value;
					this.SendPropertyChanged("AddedByUser");
					this.OnAddedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUser", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string UpdatedByUser
		{
			get
			{
				return this._UpdatedByUser;
			}
			set
			{
				if ((this._UpdatedByUser != value))
				{
					this.OnUpdatedByUserChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUser = value;
					this.SendPropertyChanged("UpdatedByUser");
					this.OnUpdatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDIPAdjustment")]
	public partial class tblDIPAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _ProductID;
		
		private decimal _TotalPhysicalStock;
		
		private decimal _TotalSystemStock;
		
		private decimal _DifferenceQuantity;
		
		private decimal _AdjustmentRate;
		
		private System.DateTime _Dated;
		
		private bool _IsPosted;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnTotalPhysicalStockChanging(decimal value);
    partial void OnTotalPhysicalStockChanged();
    partial void OnTotalSystemStockChanging(decimal value);
    partial void OnTotalSystemStockChanged();
    partial void OnDifferenceQuantityChanging(decimal value);
    partial void OnDifferenceQuantityChanged();
    partial void OnAdjustmentRateChanging(decimal value);
    partial void OnAdjustmentRateChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnIsPostedChanging(bool value);
    partial void OnIsPostedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblDIPAdjustment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPhysicalStock", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TotalPhysicalStock
		{
			get
			{
				return this._TotalPhysicalStock;
			}
			set
			{
				if ((this._TotalPhysicalStock != value))
				{
					this.OnTotalPhysicalStockChanging(value);
					this.SendPropertyChanging();
					this._TotalPhysicalStock = value;
					this.SendPropertyChanged("TotalPhysicalStock");
					this.OnTotalPhysicalStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSystemStock", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TotalSystemStock
		{
			get
			{
				return this._TotalSystemStock;
			}
			set
			{
				if ((this._TotalSystemStock != value))
				{
					this.OnTotalSystemStockChanging(value);
					this.SendPropertyChanging();
					this._TotalSystemStock = value;
					this.SendPropertyChanged("TotalSystemStock");
					this.OnTotalSystemStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferenceQuantity", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DifferenceQuantity
		{
			get
			{
				return this._DifferenceQuantity;
			}
			set
			{
				if ((this._DifferenceQuantity != value))
				{
					this.OnDifferenceQuantityChanging(value);
					this.SendPropertyChanging();
					this._DifferenceQuantity = value;
					this.SendPropertyChanged("DifferenceQuantity");
					this.OnDifferenceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentRate", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AdjustmentRate
		{
			get
			{
				return this._AdjustmentRate;
			}
			set
			{
				if ((this._AdjustmentRate != value))
				{
					this.OnAdjustmentRateChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentRate = value;
					this.SendPropertyChanged("AdjustmentRate");
					this.OnAdjustmentRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPosted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsPosted
		{
			get
			{
				return this._IsPosted;
			}
			set
			{
				if ((this._IsPosted != value))
				{
					this.OnIsPostedChanging(value);
					this.SendPropertyChanging();
					this._IsPosted = value;
					this.SendPropertyChanged("IsPosted");
					this.OnIsPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccounts")]
	public partial class tblAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Account_Type_ID;
		
		private int _PumpID;
		
		private string _Name;
		
		private string _Description;
		
		private string _Mobile_No;
		
		private string _Email_Address;
		
		private string _Phone_No;
		
		private bool _Is_Deleted;
		
		private bool _Is_Active;
		
		private bool _Is_Default;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<tblAccountType> _tblAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccount_Type_IDChanging(int value);
    partial void OnAccount_Type_IDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMobile_NoChanging(string value);
    partial void OnMobile_NoChanged();
    partial void OnEmail_AddressChanging(string value);
    partial void OnEmail_AddressChanged();
    partial void OnPhone_NoChanging(string value);
    partial void OnPhone_NoChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DefaultChanging(bool value);
    partial void OnIs_DefaultChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblAccount()
		{
			this._tblAccountType = default(EntityRef<tblAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Type_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Account_Type_ID
		{
			get
			{
				return this._Account_Type_ID;
			}
			set
			{
				if ((this._Account_Type_ID != value))
				{
					if (this._tblAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccount_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_Type_ID = value;
					this.SendPropertyChanged("Account_Type_ID");
					this.OnAccount_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile_No", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile_No
		{
			get
			{
				return this._Mobile_No;
			}
			set
			{
				if ((this._Mobile_No != value))
				{
					this.OnMobile_NoChanging(value);
					this.SendPropertyChanging();
					this._Mobile_No = value;
					this.SendPropertyChanged("Mobile_No");
					this.OnMobile_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Address", DbType="NVarChar(120)", UpdateCheck=UpdateCheck.Never)]
		public string Email_Address
		{
			get
			{
				return this._Email_Address;
			}
			set
			{
				if ((this._Email_Address != value))
				{
					this.OnEmail_AddressChanging(value);
					this.SendPropertyChanging();
					this._Email_Address = value;
					this.SendPropertyChanged("Email_Address");
					this.OnEmail_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_No", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Phone_No
		{
			get
			{
				return this._Phone_No;
			}
			set
			{
				if ((this._Phone_No != value))
				{
					this.OnPhone_NoChanging(value);
					this.SendPropertyChanging();
					this._Phone_No = value;
					this.SendPropertyChanged("Phone_No");
					this.OnPhone_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Default", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Default
		{
			get
			{
				return this._Is_Default;
			}
			set
			{
				if ((this._Is_Default != value))
				{
					this.OnIs_DefaultChanging(value);
					this.SendPropertyChanging();
					this._Is_Default = value;
					this.SendPropertyChanged("Is_Default");
					this.OnIs_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAccountType_tblAccount", Storage="_tblAccountType", ThisKey="Account_Type_ID", OtherKey="ID", IsForeignKey=true)]
		public tblAccountType tblAccountType
		{
			get
			{
				return this._tblAccountType.Entity;
			}
			set
			{
				tblAccountType previousValue = this._tblAccountType.Entity;
				if (((previousValue != value) 
							|| (this._tblAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAccountType.Entity = null;
						previousValue.tblAccounts.Remove(this);
					}
					this._tblAccountType.Entity = value;
					if ((value != null))
					{
						value.tblAccounts.Add(this);
						this._Account_Type_ID = value.ID;
					}
					else
					{
						this._Account_Type_ID = default(int);
					}
					this.SendPropertyChanged("tblAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLoginLog")]
	public partial class tblLoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _User_Name;
		
		private string _Password;
		
		private bool _Is_Success;
		
		private string _IP_Address;
		
		private string _User_Type;
		
		private string _Login_Source;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIs_SuccessChanging(bool value);
    partial void OnIs_SuccessChanged();
    partial void OnIP_AddressChanging(string value);
    partial void OnIP_AddressChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    partial void OnLogin_SourceChanging(string value);
    partial void OnLogin_SourceChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblLoginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="VarChar(120) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Success", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Success
		{
			get
			{
				return this._Is_Success;
			}
			set
			{
				if ((this._Is_Success != value))
				{
					this.OnIs_SuccessChanging(value);
					this.SendPropertyChanging();
					this._Is_Success = value;
					this.SendPropertyChanged("Is_Success");
					this.OnIs_SuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Address", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IP_Address
		{
			get
			{
				return this._IP_Address;
			}
			set
			{
				if ((this._IP_Address != value))
				{
					this.OnIP_AddressChanging(value);
					this.SendPropertyChanging();
					this._IP_Address = value;
					this.SendPropertyChanged("IP_Address");
					this.OnIP_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Source", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Login_Source
		{
			get
			{
				return this._Login_Source;
			}
			set
			{
				if ((this._Login_Source != value))
				{
					this.OnLogin_SourceChanging(value);
					this.SendPropertyChanging();
					this._Login_Source = value;
					this.SendPropertyChanged("Login_Source");
					this.OnLogin_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPumpReadings")]
	public partial class tblPumpReading : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _PumpMachineID;
		
		private int _Pump_No;
		
		private string _ProductCode;
		
		private string _ProductName;
		
		private decimal _Last_Reading;
		
		private decimal _Current_Reading;
		
		private decimal _Returned;
		
		private System.DateTime _Dated;
		
		private int _Invoice_ID;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpMachineIDChanging(int value);
    partial void OnPumpMachineIDChanged();
    partial void OnPump_NoChanging(int value);
    partial void OnPump_NoChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnLast_ReadingChanging(decimal value);
    partial void OnLast_ReadingChanged();
    partial void OnCurrent_ReadingChanging(decimal value);
    partial void OnCurrent_ReadingChanged();
    partial void OnReturnedChanging(decimal value);
    partial void OnReturnedChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblPumpReading()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpMachineID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpMachineID
		{
			get
			{
				return this._PumpMachineID;
			}
			set
			{
				if ((this._PumpMachineID != value))
				{
					this.OnPumpMachineIDChanging(value);
					this.SendPropertyChanging();
					this._PumpMachineID = value;
					this.SendPropertyChanged("PumpMachineID");
					this.OnPumpMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_No", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Pump_No
		{
			get
			{
				return this._Pump_No;
			}
			set
			{
				if ((this._Pump_No != value))
				{
					this.OnPump_NoChanging(value);
					this.SendPropertyChanging();
					this._Pump_No = value;
					this.SendPropertyChanged("Pump_No");
					this.OnPump_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Reading", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Last_Reading
		{
			get
			{
				return this._Last_Reading;
			}
			set
			{
				if ((this._Last_Reading != value))
				{
					this.OnLast_ReadingChanging(value);
					this.SendPropertyChanging();
					this._Last_Reading = value;
					this.SendPropertyChanged("Last_Reading");
					this.OnLast_ReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Reading", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Current_Reading
		{
			get
			{
				return this._Current_Reading;
			}
			set
			{
				if ((this._Current_Reading != value))
				{
					this.OnCurrent_ReadingChanging(value);
					this.SendPropertyChanging();
					this._Current_Reading = value;
					this.SendPropertyChanged("Current_Reading");
					this.OnCurrent_ReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Returned", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Returned
		{
			get
			{
				return this._Returned;
			}
			set
			{
				if ((this._Returned != value))
				{
					this.OnReturnedChanging(value);
					this.SendPropertyChanging();
					this._Returned = value;
					this.SendPropertyChanged("Returned");
					this.OnReturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSaleInvoiceDetails")]
	public partial class tblSaleInvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private int _Invoice_ID;
		
		private int _Product_ID;
		
		private int _Account_ID;
		
		private decimal _Quantity;
		
		private decimal _Price;
		
		private bool _Is_Cash;
		
		private string _Vehicle_No;
		
		private string _Receipt_No;
		
		private decimal _Purchase_Price;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<tblSaleInvoiceHead> _tblSaleInvoiceHead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnAccount_IDChanging(int value);
    partial void OnAccount_IDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIs_CashChanging(bool value);
    partial void OnIs_CashChanged();
    partial void OnVehicle_NoChanging(string value);
    partial void OnVehicle_NoChanged();
    partial void OnReceipt_NoChanging(string value);
    partial void OnReceipt_NoChanged();
    partial void OnPurchase_PriceChanging(decimal value);
    partial void OnPurchase_PriceChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblSaleInvoiceDetail()
		{
			this._tblSaleInvoiceHead = default(EntityRef<tblSaleInvoiceHead>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					if (this._tblSaleInvoiceHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Account_ID
		{
			get
			{
				return this._Account_ID;
			}
			set
			{
				if ((this._Account_ID != value))
				{
					this.OnAccount_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_ID = value;
					this.SendPropertyChanged("Account_ID");
					this.OnAccount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Cash", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Cash
		{
			get
			{
				return this._Is_Cash;
			}
			set
			{
				if ((this._Is_Cash != value))
				{
					this.OnIs_CashChanging(value);
					this.SendPropertyChanging();
					this._Is_Cash = value;
					this.SendPropertyChanged("Is_Cash");
					this.OnIs_CashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_No", DbType="NVarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string Vehicle_No
		{
			get
			{
				return this._Vehicle_No;
			}
			set
			{
				if ((this._Vehicle_No != value))
				{
					this.OnVehicle_NoChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_No = value;
					this.SendPropertyChanged("Vehicle_No");
					this.OnVehicle_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receipt_No", DbType="NVarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string Receipt_No
		{
			get
			{
				return this._Receipt_No;
			}
			set
			{
				if ((this._Receipt_No != value))
				{
					this.OnReceipt_NoChanging(value);
					this.SendPropertyChanging();
					this._Receipt_No = value;
					this.SendPropertyChanged("Receipt_No");
					this.OnReceipt_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purchase_Price", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Purchase_Price
		{
			get
			{
				return this._Purchase_Price;
			}
			set
			{
				if ((this._Purchase_Price != value))
				{
					this.OnPurchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Purchase_Price = value;
					this.SendPropertyChanged("Purchase_Price");
					this.OnPurchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSaleInvoiceHead_tblSaleInvoiceDetail", Storage="_tblSaleInvoiceHead", ThisKey="Invoice_ID", OtherKey="ID", IsForeignKey=true)]
		public tblSaleInvoiceHead tblSaleInvoiceHead
		{
			get
			{
				return this._tblSaleInvoiceHead.Entity;
			}
			set
			{
				tblSaleInvoiceHead previousValue = this._tblSaleInvoiceHead.Entity;
				if (((previousValue != value) 
							|| (this._tblSaleInvoiceHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSaleInvoiceHead.Entity = null;
						previousValue.tblSaleInvoiceDetails.Remove(this);
					}
					this._tblSaleInvoiceHead.Entity = value;
					if ((value != null))
					{
						value.tblSaleInvoiceDetails.Add(this);
						this._Invoice_ID = value.ID;
					}
					else
					{
						this._Invoice_ID = default(int);
					}
					this.SendPropertyChanged("tblSaleInvoiceHead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGeneralLedger")]
	public partial class tblGeneralLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _Account_ID;
		
		private System.DateTime _Transaction_Date;
		
		private string _Description;
		
		private int _Reference_No;
		
		private string _Reference_Type;
		
		private string _Vehicle_No;
		
		private string _Receipt_No;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private decimal _Balance;
		
		private string _BalanceType;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnAccount_IDChanging(int value);
    partial void OnAccount_IDChanged();
    partial void OnTransaction_DateChanging(System.DateTime value);
    partial void OnTransaction_DateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReference_NoChanging(int value);
    partial void OnReference_NoChanged();
    partial void OnReference_TypeChanging(string value);
    partial void OnReference_TypeChanged();
    partial void OnVehicle_NoChanging(string value);
    partial void OnVehicle_NoChanged();
    partial void OnReceipt_NoChanging(string value);
    partial void OnReceipt_NoChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnBalanceTypeChanging(string value);
    partial void OnBalanceTypeChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblGeneralLedger()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Account_ID
		{
			get
			{
				return this._Account_ID;
			}
			set
			{
				if ((this._Account_ID != value))
				{
					this.OnAccount_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_ID = value;
					this.SendPropertyChanged("Account_ID");
					this.OnAccount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Date", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Transaction_Date
		{
			get
			{
				return this._Transaction_Date;
			}
			set
			{
				if ((this._Transaction_Date != value))
				{
					this.OnTransaction_DateChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Date = value;
					this.SendPropertyChanged("Transaction_Date");
					this.OnTransaction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_No", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Reference_No
		{
			get
			{
				return this._Reference_No;
			}
			set
			{
				if ((this._Reference_No != value))
				{
					this.OnReference_NoChanging(value);
					this.SendPropertyChanging();
					this._Reference_No = value;
					this.SendPropertyChanged("Reference_No");
					this.OnReference_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reference_Type
		{
			get
			{
				return this._Reference_Type;
			}
			set
			{
				if ((this._Reference_Type != value))
				{
					this.OnReference_TypeChanging(value);
					this.SendPropertyChanging();
					this._Reference_Type = value;
					this.SendPropertyChanged("Reference_Type");
					this.OnReference_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_No", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Vehicle_No
		{
			get
			{
				return this._Vehicle_No;
			}
			set
			{
				if ((this._Vehicle_No != value))
				{
					this.OnVehicle_NoChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_No = value;
					this.SendPropertyChanged("Vehicle_No");
					this.OnVehicle_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receipt_No", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Receipt_No
		{
			get
			{
				return this._Receipt_No;
			}
			set
			{
				if ((this._Receipt_No != value))
				{
					this.OnReceipt_NoChanging(value);
					this.SendPropertyChanging();
					this._Receipt_No = value;
					this.SendPropertyChanged("Receipt_No");
					this.OnReceipt_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceType", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string BalanceType
		{
			get
			{
				return this._BalanceType;
			}
			set
			{
				if ((this._BalanceType != value))
				{
					this.OnBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._BalanceType = value;
					this.SendPropertyChanged("BalanceType");
					this.OnBalanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomerRates")]
	public partial class tblCustomerRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private int _Customer_ID;
		
		private System.Nullable<int> _Product_ID;
		
		private System.Nullable<decimal> _Selling_Rate;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnProduct_IDChanging(System.Nullable<int> value);
    partial void OnProduct_IDChanged();
    partial void OnSelling_RateChanging(System.Nullable<decimal> value);
    partial void OnSelling_RateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblCustomerRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selling_Rate", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Selling_Rate
		{
			get
			{
				return this._Selling_Rate;
			}
			set
			{
				if ((this._Selling_Rate != value))
				{
					this.OnSelling_RateChanging(value);
					this.SendPropertyChanging();
					this._Selling_Rate = value;
					this.SendPropertyChanged("Selling_Rate");
					this.OnSelling_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccountMap")]
	public partial class tblAccountMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OldAccountID;
		
		private int _NewAccountID;
		
		private string _Name;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldAccountIDChanging(int value);
    partial void OnOldAccountIDChanged();
    partial void OnNewAccountIDChanging(int value);
    partial void OnNewAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblAccountMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldAccountID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OldAccountID
		{
			get
			{
				return this._OldAccountID;
			}
			set
			{
				if ((this._OldAccountID != value))
				{
					this.OnOldAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OldAccountID = value;
					this.SendPropertyChanged("OldAccountID");
					this.OnOldAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAccountID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int NewAccountID
		{
			get
			{
				return this._NewAccountID;
			}
			set
			{
				if ((this._NewAccountID != value))
				{
					this.OnNewAccountIDChanging(value);
					this.SendPropertyChanging();
					this._NewAccountID = value;
					this.SendPropertyChanged("NewAccountID");
					this.OnNewAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblException")]
	public partial class tblException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Module_Name;
		
		private string _Page_URL;
		
		private string _Event_Name;
		
		private string _Message;
		
		private string _Exception_Details;
		
		private System.DateTime _Dated;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModule_NameChanging(string value);
    partial void OnModule_NameChanged();
    partial void OnPage_URLChanging(string value);
    partial void OnPage_URLChanged();
    partial void OnEvent_NameChanging(string value);
    partial void OnEvent_NameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnException_DetailsChanging(string value);
    partial void OnException_DetailsChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblException()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_Name", DbType="NVarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string Module_Name
		{
			get
			{
				return this._Module_Name;
			}
			set
			{
				if ((this._Module_Name != value))
				{
					this.OnModule_NameChanging(value);
					this.SendPropertyChanging();
					this._Module_Name = value;
					this.SendPropertyChanged("Module_Name");
					this.OnModule_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_URL", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Page_URL
		{
			get
			{
				return this._Page_URL;
			}
			set
			{
				if ((this._Page_URL != value))
				{
					this.OnPage_URLChanging(value);
					this.SendPropertyChanging();
					this._Page_URL = value;
					this.SendPropertyChanged("Page_URL");
					this.OnPage_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_Name", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Event_Name
		{
			get
			{
				return this._Event_Name;
			}
			set
			{
				if ((this._Event_Name != value))
				{
					this.OnEvent_NameChanging(value);
					this.SendPropertyChanging();
					this._Event_Name = value;
					this.SendPropertyChanged("Event_Name");
					this.OnEvent_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception_Details", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Exception_Details
		{
			get
			{
				return this._Exception_Details;
			}
			set
			{
				if ((this._Exception_Details != value))
				{
					this.OnException_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Exception_Details = value;
					this.SendPropertyChanged("Exception_Details");
					this.OnException_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTankDefination")]
	public partial class tblTankDefination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private int _TankNo;
		
		private int _ProductID;
		
		private decimal _TankFullCapacity;
		
		private decimal _UseableCapacity;
		
		private string _TankSizeDeails;
		
		private string _TankShape;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnTankNoChanging(int value);
    partial void OnTankNoChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnTankFullCapacityChanging(decimal value);
    partial void OnTankFullCapacityChanged();
    partial void OnUseableCapacityChanging(decimal value);
    partial void OnUseableCapacityChanged();
    partial void OnTankSizeDeailsChanging(string value);
    partial void OnTankSizeDeailsChanged();
    partial void OnTankShapeChanging(string value);
    partial void OnTankShapeChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblTankDefination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TankNo
		{
			get
			{
				return this._TankNo;
			}
			set
			{
				if ((this._TankNo != value))
				{
					this.OnTankNoChanging(value);
					this.SendPropertyChanging();
					this._TankNo = value;
					this.SendPropertyChanged("TankNo");
					this.OnTankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankFullCapacity", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TankFullCapacity
		{
			get
			{
				return this._TankFullCapacity;
			}
			set
			{
				if ((this._TankFullCapacity != value))
				{
					this.OnTankFullCapacityChanging(value);
					this.SendPropertyChanging();
					this._TankFullCapacity = value;
					this.SendPropertyChanged("TankFullCapacity");
					this.OnTankFullCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseableCapacity", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal UseableCapacity
		{
			get
			{
				return this._UseableCapacity;
			}
			set
			{
				if ((this._UseableCapacity != value))
				{
					this.OnUseableCapacityChanging(value);
					this.SendPropertyChanging();
					this._UseableCapacity = value;
					this.SendPropertyChanged("UseableCapacity");
					this.OnUseableCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankSizeDeails", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string TankSizeDeails
		{
			get
			{
				return this._TankSizeDeails;
			}
			set
			{
				if ((this._TankSizeDeails != value))
				{
					this.OnTankSizeDeailsChanging(value);
					this.SendPropertyChanging();
					this._TankSizeDeails = value;
					this.SendPropertyChanged("TankSizeDeails");
					this.OnTankSizeDeailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankShape", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string TankShape
		{
			get
			{
				return this._TankShape;
			}
			set
			{
				if ((this._TankShape != value))
				{
					this.OnTankShapeChanging(value);
					this.SendPropertyChanging();
					this._TankShape = value;
					this.SendPropertyChanged("TankShape");
					this.OnTankShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompanyInfo")]
	public partial class tblCompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PumpCode;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Website;
		
		private string _Logo_Login;
		
		private string _Logo_Title;
		
		private string _Logo_Reports;
		
		private bool _Show_Pumps;
		
		private int _FuelProviderID;
		
		private string _PackageName;
		
		private System.DateTime _PackageExpiry;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnLogo_LoginChanging(string value);
    partial void OnLogo_LoginChanged();
    partial void OnLogo_TitleChanging(string value);
    partial void OnLogo_TitleChanged();
    partial void OnLogo_ReportsChanging(string value);
    partial void OnLogo_ReportsChanged();
    partial void OnShow_PumpsChanging(bool value);
    partial void OnShow_PumpsChanged();
    partial void OnFuelProviderIDChanging(int value);
    partial void OnFuelProviderIDChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    partial void OnPackageExpiryChanging(System.DateTime value);
    partial void OnPackageExpiryChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblCompanyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Login", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Logo_Login
		{
			get
			{
				return this._Logo_Login;
			}
			set
			{
				if ((this._Logo_Login != value))
				{
					this.OnLogo_LoginChanging(value);
					this.SendPropertyChanging();
					this._Logo_Login = value;
					this.SendPropertyChanged("Logo_Login");
					this.OnLogo_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Title", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Logo_Title
		{
			get
			{
				return this._Logo_Title;
			}
			set
			{
				if ((this._Logo_Title != value))
				{
					this.OnLogo_TitleChanging(value);
					this.SendPropertyChanging();
					this._Logo_Title = value;
					this.SendPropertyChanged("Logo_Title");
					this.OnLogo_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo_Reports", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Logo_Reports
		{
			get
			{
				return this._Logo_Reports;
			}
			set
			{
				if ((this._Logo_Reports != value))
				{
					this.OnLogo_ReportsChanging(value);
					this.SendPropertyChanging();
					this._Logo_Reports = value;
					this.SendPropertyChanged("Logo_Reports");
					this.OnLogo_ReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show_Pumps", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Show_Pumps
		{
			get
			{
				return this._Show_Pumps;
			}
			set
			{
				if ((this._Show_Pumps != value))
				{
					this.OnShow_PumpsChanging(value);
					this.SendPropertyChanging();
					this._Show_Pumps = value;
					this.SendPropertyChanged("Show_Pumps");
					this.OnShow_PumpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelProviderID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FuelProviderID
		{
			get
			{
				return this._FuelProviderID;
			}
			set
			{
				if ((this._FuelProviderID != value))
				{
					this.OnFuelProviderIDChanging(value);
					this.SendPropertyChanging();
					this._FuelProviderID = value;
					this.SendPropertyChanged("FuelProviderID");
					this.OnFuelProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageExpiry", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PackageExpiry
		{
			get
			{
				return this._PackageExpiry;
			}
			set
			{
				if ((this._PackageExpiry != value))
				{
					this.OnPackageExpiryChanging(value);
					this.SendPropertyChanging();
					this._PackageExpiry = value;
					this.SendPropertyChanged("PackageExpiry");
					this.OnPackageExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductMap")]
	public partial class tblProductMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OldProductID;
		
		private int _NewProductID;
		
		private string _Name;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldProductIDChanging(int value);
    partial void OnOldProductIDChanged();
    partial void OnNewProductIDChanging(int value);
    partial void OnNewProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblProductMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldProductID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OldProductID
		{
			get
			{
				return this._OldProductID;
			}
			set
			{
				if ((this._OldProductID != value))
				{
					this.OnOldProductIDChanging(value);
					this.SendPropertyChanging();
					this._OldProductID = value;
					this.SendPropertyChanged("OldProductID");
					this.OnOldProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewProductID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int NewProductID
		{
			get
			{
				return this._NewProductID;
			}
			set
			{
				if ((this._NewProductID != value))
				{
					this.OnNewProductIDChanging(value);
					this.SendPropertyChanging();
					this._NewProductID = value;
					this.SendPropertyChanged("NewProductID");
					this.OnNewProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDipReading")]
	public partial class tblDipReading : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdjustmentID;
		
		private int _TankID;
		
		private int _PumpID;
		
		private int _TankNo;
		
		private int _ProductID;
		
		private string _ProductCode;
		
		private string _ProductName;
		
		private decimal _DIP;
		
		private decimal _StockLtr;
		
		private System.DateTime _Dated;
		
		private bool _IsPosted;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdjustmentIDChanging(int value);
    partial void OnAdjustmentIDChanged();
    partial void OnTankIDChanging(int value);
    partial void OnTankIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnTankNoChanging(int value);
    partial void OnTankNoChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnDIPChanging(decimal value);
    partial void OnDIPChanged();
    partial void OnStockLtrChanging(decimal value);
    partial void OnStockLtrChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnIsPostedChanging(bool value);
    partial void OnIsPostedChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblDipReading()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AdjustmentID
		{
			get
			{
				return this._AdjustmentID;
			}
			set
			{
				if ((this._AdjustmentID != value))
				{
					this.OnAdjustmentIDChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentID = value;
					this.SendPropertyChanged("AdjustmentID");
					this.OnAdjustmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TankID
		{
			get
			{
				return this._TankID;
			}
			set
			{
				if ((this._TankID != value))
				{
					this.OnTankIDChanging(value);
					this.SendPropertyChanging();
					this._TankID = value;
					this.SendPropertyChanged("TankID");
					this.OnTankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TankNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TankNo
		{
			get
			{
				return this._TankNo;
			}
			set
			{
				if ((this._TankNo != value))
				{
					this.OnTankNoChanging(value);
					this.SendPropertyChanging();
					this._TankNo = value;
					this.SendPropertyChanged("TankNo");
					this.OnTankNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIP", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DIP
		{
			get
			{
				return this._DIP;
			}
			set
			{
				if ((this._DIP != value))
				{
					this.OnDIPChanging(value);
					this.SendPropertyChanging();
					this._DIP = value;
					this.SendPropertyChanged("DIP");
					this.OnDIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockLtr", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal StockLtr
		{
			get
			{
				return this._StockLtr;
			}
			set
			{
				if ((this._StockLtr != value))
				{
					this.OnStockLtrChanging(value);
					this.SendPropertyChanging();
					this._StockLtr = value;
					this.SendPropertyChanged("StockLtr");
					this.OnStockLtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPosted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsPosted
		{
			get
			{
				return this._IsPosted;
			}
			set
			{
				if ((this._IsPosted != value))
				{
					this.OnIsPostedChanging(value);
					this.SendPropertyChanging();
					this._IsPosted = value;
					this.SendPropertyChanged("IsPosted");
					this.OnIsPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPurchaseInvoiceDetails")]
	public partial class tblPurchaseInvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private int _Invoice_ID;
		
		private int _Product_ID;
		
		private int _Account_ID;
		
		private decimal _Quantity;
		
		private decimal _Price;
		
		private bool _Is_Cash;
		
		private string _Vehicle_No;
		
		private string _Updatedby;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<tblPurchaseInvoiceHead> _tblPurchaseInvoiceHead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnAccount_IDChanging(int value);
    partial void OnAccount_IDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIs_CashChanging(bool value);
    partial void OnIs_CashChanged();
    partial void OnVehicle_NoChanging(string value);
    partial void OnVehicle_NoChanged();
    partial void OnUpdatedbyChanging(string value);
    partial void OnUpdatedbyChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblPurchaseInvoiceDetail()
		{
			this._tblPurchaseInvoiceHead = default(EntityRef<tblPurchaseInvoiceHead>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					if (this._tblPurchaseInvoiceHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Account_ID
		{
			get
			{
				return this._Account_ID;
			}
			set
			{
				if ((this._Account_ID != value))
				{
					this.OnAccount_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_ID = value;
					this.SendPropertyChanged("Account_ID");
					this.OnAccount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Cash", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Cash
		{
			get
			{
				return this._Is_Cash;
			}
			set
			{
				if ((this._Is_Cash != value))
				{
					this.OnIs_CashChanging(value);
					this.SendPropertyChanging();
					this._Is_Cash = value;
					this.SendPropertyChanged("Is_Cash");
					this.OnIs_CashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_No", DbType="NVarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string Vehicle_No
		{
			get
			{
				return this._Vehicle_No;
			}
			set
			{
				if ((this._Vehicle_No != value))
				{
					this.OnVehicle_NoChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_No = value;
					this.SendPropertyChanged("Vehicle_No");
					this.OnVehicle_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updatedby", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Updatedby
		{
			get
			{
				return this._Updatedby;
			}
			set
			{
				if ((this._Updatedby != value))
				{
					this.OnUpdatedbyChanging(value);
					this.SendPropertyChanging();
					this._Updatedby = value;
					this.SendPropertyChanged("Updatedby");
					this.OnUpdatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPurchaseInvoiceHead_tblPurchaseInvoiceDetail", Storage="_tblPurchaseInvoiceHead", ThisKey="Invoice_ID", OtherKey="ID", IsForeignKey=true)]
		public tblPurchaseInvoiceHead tblPurchaseInvoiceHead
		{
			get
			{
				return this._tblPurchaseInvoiceHead.Entity;
			}
			set
			{
				tblPurchaseInvoiceHead previousValue = this._tblPurchaseInvoiceHead.Entity;
				if (((previousValue != value) 
							|| (this._tblPurchaseInvoiceHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPurchaseInvoiceHead.Entity = null;
						previousValue.tblPurchaseInvoiceDetails.Remove(this);
					}
					this._tblPurchaseInvoiceHead.Entity = value;
					if ((value != null))
					{
						value.tblPurchaseInvoiceDetails.Add(this);
						this._Invoice_ID = value.ID;
					}
					else
					{
						this._Invoice_ID = default(int);
					}
					this.SendPropertyChanged("tblPurchaseInvoiceHead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPurchaseInvoiceHead")]
	public partial class tblPurchaseInvoiceHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceNo;
		
		private int _PumpID;
		
		private string _PumpCode;
		
		private System.DateTime _Dated;
		
		private decimal _Cash_Total;
		
		private decimal _Credit_Total;
		
		private string _Description;
		
		private string _Reference_No;
		
		private string _AddedBy;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<tblPurchaseInvoiceDetail> _tblPurchaseInvoiceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnPumpIDChanging(int value);
    partial void OnPumpIDChanged();
    partial void OnPumpCodeChanging(string value);
    partial void OnPumpCodeChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCash_TotalChanging(decimal value);
    partial void OnCash_TotalChanged();
    partial void OnCredit_TotalChanging(decimal value);
    partial void OnCredit_TotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReference_NoChanging(string value);
    partial void OnReference_NoChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblPurchaseInvoiceHead()
		{
			this._tblPurchaseInvoiceDetails = new EntitySet<tblPurchaseInvoiceDetail>(new Action<tblPurchaseInvoiceDetail>(this.attach_tblPurchaseInvoiceDetails), new Action<tblPurchaseInvoiceDetail>(this.detach_tblPurchaseInvoiceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PumpID
		{
			get
			{
				return this._PumpID;
			}
			set
			{
				if ((this._PumpID != value))
				{
					this.OnPumpIDChanging(value);
					this.SendPropertyChanging();
					this._PumpID = value;
					this.SendPropertyChanged("PumpID");
					this.OnPumpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PumpCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PumpCode
		{
			get
			{
				return this._PumpCode;
			}
			set
			{
				if ((this._PumpCode != value))
				{
					this.OnPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._PumpCode = value;
					this.SendPropertyChanged("PumpCode");
					this.OnPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Total", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Cash_Total
		{
			get
			{
				return this._Cash_Total;
			}
			set
			{
				if ((this._Cash_Total != value))
				{
					this.OnCash_TotalChanging(value);
					this.SendPropertyChanging();
					this._Cash_Total = value;
					this.SendPropertyChanged("Cash_Total");
					this.OnCash_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit_Total", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Credit_Total
		{
			get
			{
				return this._Credit_Total;
			}
			set
			{
				if ((this._Credit_Total != value))
				{
					this.OnCredit_TotalChanging(value);
					this.SendPropertyChanging();
					this._Credit_Total = value;
					this.SendPropertyChanged("Credit_Total");
					this.OnCredit_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_No", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Reference_No
		{
			get
			{
				return this._Reference_No;
			}
			set
			{
				if ((this._Reference_No != value))
				{
					this.OnReference_NoChanging(value);
					this.SendPropertyChanging();
					this._Reference_No = value;
					this.SendPropertyChanged("Reference_No");
					this.OnReference_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPurchaseInvoiceHead_tblPurchaseInvoiceDetail", Storage="_tblPurchaseInvoiceDetails", ThisKey="ID", OtherKey="Invoice_ID")]
		public EntitySet<tblPurchaseInvoiceDetail> tblPurchaseInvoiceDetails
		{
			get
			{
				return this._tblPurchaseInvoiceDetails;
			}
			set
			{
				this._tblPurchaseInvoiceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPurchaseInvoiceDetails(tblPurchaseInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPurchaseInvoiceHead = this;
		}
		
		private void detach_tblPurchaseInvoiceDetails(tblPurchaseInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPurchaseInvoiceHead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullName;
		
		private string _User_Mobile;
		
		private string _User_Email;
		
		private string _Password;
		
		private System.DateTime _LastPasswordChange;
		
		private string _User_Type;
		
		private string _Android_Token;
		
		private bool _Email_Verified;
		
		private string _Verification_Code;
		
		private System.DateTime _Verification_Expiry;
		
		private bool _Is_Active;
		
		private bool _Is_Deleted;
		
		private System.DateTime _Created_Date;
		
		private System.DateTime _Updated_Date;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUser_MobileChanging(string value);
    partial void OnUser_MobileChanged();
    partial void OnUser_EmailChanging(string value);
    partial void OnUser_EmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastPasswordChangeChanging(System.DateTime value);
    partial void OnLastPasswordChangeChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    partial void OnAndroid_TokenChanging(string value);
    partial void OnAndroid_TokenChanged();
    partial void OnEmail_VerifiedChanging(bool value);
    partial void OnEmail_VerifiedChanged();
    partial void OnVerification_CodeChanging(string value);
    partial void OnVerification_CodeChanged();
    partial void OnVerification_ExpiryChanging(System.DateTime value);
    partial void OnVerification_ExpiryChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnIs_DeletedChanging(bool value);
    partial void OnIs_DeletedChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnUpdated_DateChanging(System.DateTime value);
    partial void OnUpdated_DateChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string User_Mobile
		{
			get
			{
				return this._User_Mobile;
			}
			set
			{
				if ((this._User_Mobile != value))
				{
					this.OnUser_MobileChanging(value);
					this.SendPropertyChanging();
					this._User_Mobile = value;
					this.SendPropertyChanged("User_Mobile");
					this.OnUser_MobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Email", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string User_Email
		{
			get
			{
				return this._User_Email;
			}
			set
			{
				if ((this._User_Email != value))
				{
					this.OnUser_EmailChanging(value);
					this.SendPropertyChanging();
					this._User_Email = value;
					this.SendPropertyChanged("User_Email");
					this.OnUser_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(1000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChange", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastPasswordChange
		{
			get
			{
				return this._LastPasswordChange;
			}
			set
			{
				if ((this._LastPasswordChange != value))
				{
					this.OnLastPasswordChangeChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChange = value;
					this.SendPropertyChanged("LastPasswordChange");
					this.OnLastPasswordChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Android_Token", DbType="NVarChar(3000)", UpdateCheck=UpdateCheck.Never)]
		public string Android_Token
		{
			get
			{
				return this._Android_Token;
			}
			set
			{
				if ((this._Android_Token != value))
				{
					this.OnAndroid_TokenChanging(value);
					this.SendPropertyChanging();
					this._Android_Token = value;
					this.SendPropertyChanged("Android_Token");
					this.OnAndroid_TokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Verified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Email_Verified
		{
			get
			{
				return this._Email_Verified;
			}
			set
			{
				if ((this._Email_Verified != value))
				{
					this.OnEmail_VerifiedChanging(value);
					this.SendPropertyChanging();
					this._Email_Verified = value;
					this.SendPropertyChanged("Email_Verified");
					this.OnEmail_VerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verification_Code", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Verification_Code
		{
			get
			{
				return this._Verification_Code;
			}
			set
			{
				if ((this._Verification_Code != value))
				{
					this.OnVerification_CodeChanging(value);
					this.SendPropertyChanging();
					this._Verification_Code = value;
					this.SendPropertyChanged("Verification_Code");
					this.OnVerification_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verification_Expiry", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Verification_Expiry
		{
			get
			{
				return this._Verification_Expiry;
			}
			set
			{
				if ((this._Verification_Expiry != value))
				{
					this.OnVerification_ExpiryChanging(value);
					this.SendPropertyChanging();
					this._Verification_Expiry = value;
					this.SendPropertyChanged("Verification_Expiry");
					this.OnVerification_ExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Is_Deleted
		{
			get
			{
				return this._Is_Deleted;
			}
			set
			{
				if ((this._Is_Deleted != value))
				{
					this.OnIs_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Is_Deleted = value;
					this.SendPropertyChanged("Is_Deleted");
					this.OnIs_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Updated_Date
		{
			get
			{
				return this._Updated_Date;
			}
			set
			{
				if ((this._Updated_Date != value))
				{
					this.OnUpdated_DateChanging(value);
					this.SendPropertyChanging();
					this._Updated_Date = value;
					this.SendPropertyChanged("Updated_Date");
					this.OnUpdated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetCurrentProductBalanceResult
	{
		
		private System.Nullable<decimal> _Closing_Qty;
		
		public GetCurrentProductBalanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closing_Qty", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> Closing_Qty
		{
			get
			{
				return this._Closing_Qty;
			}
			set
			{
				if ((this._Closing_Qty != value))
				{
					this._Closing_Qty = value;
				}
			}
		}
	}
	
	public partial class GetCurrentProductBalanceOnDateResult
	{
		
		private System.Nullable<decimal> _Closing_Qty;
		
		public GetCurrentProductBalanceOnDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closing_Qty", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> Closing_Qty
		{
			get
			{
				return this._Closing_Qty;
			}
			set
			{
				if ((this._Closing_Qty != value))
				{
					this._Closing_Qty = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
